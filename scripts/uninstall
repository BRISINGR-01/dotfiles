#!/bin/node

import fs from "fs";
import path from "path";
import cmd from "./cmd.js";

export function removeTopic(topic) {
	if (!topic) cmd.exit();

	topic = topic.replace(/\s/g, "_");

	fs.rmSync(path.resolve(packagesDir, `${topic}.nix`));
	const defaultNix = cmd.read(path.resolve(packagesDir, "default.nix"));
	cmd.writeTo(
		path.resolve(packagesDir, "default.nix"),
		defaultNix.replace(`  ${topic} = import ./${topic}.nix;\n`, "").replace(` ++ ${topic} { pkgs = pkgs; }`, "")
	);

	if (cmd.run("home-manager switch")) cmd.print(`Uninstalled topic "${topic}"`, { color: "redBright", bold: true });
}

function removePackage(topic, selectedPackage) {
	const packagesFile = cmd
		.read(path.resolve(packagesDir, `${topic}.nix`))
		.split("\n")
		.filter((line) => line.trim() !== selectedPackage)
		.join("\n");

	cmd.writeTo(path.resolve(packagesDir, `${topic}.nix`), packagesFile);
}

function uninstall() {
	const topicFiles = fs
		.readdirSync(packagesDir)
		.filter((topic) => topic !== "default.nix")
		.sort();

	if (cmd.parameter === "-c") {
		const topic = cmd.fzf(topicFiles.map((topic) => topic.replace(".nix", "")));

		if (!topic) {
			cmd.print("No topic selected", { color: "gray" });
			cmd.exit();
		}

		removeTopic(topic);
		cmd.exit();
	}

	const packages = topicFiles.map((topicFile) => {
		const packagesFile = cmd.read(path.resolve(packagesDir, topicFile)).split("\n");

		return {
			topic: topicFile.replace(".nix", ""),
			packages: packagesFile
				.slice(packagesFile.indexOf("with pkgs; [") + 1, packagesFile.lastIndexOf("]"))
				.map((pkg) => pkg.trim()),
		};
	});

	const selectedPackage = cmd.fzf(packages.flatMap((topic) => topic.packages).sort());

	if (!selectedPackage) {
		cmd.print("No package selected", { color: "gray" });
		cmd.exit();
	}

	const topic = packages.find(({ packages }) => packages.includes(selectedPackage)).topic;
	removePackage(topic, selectedPackage);

	cmd.print(`Uninstalling package "${selectedPackage}" from "${topic}"`, { color: "redBright", bold: true });

	if (cmd.run("home-manager switch")) cmd.print("Done", { color: "blueBright", bold: true });
}

const packagesDir = path.resolve(cmd.dotfilesDir, "nix", "packages");

uninstall();
