#!/bin/node

import fs from "fs";
import path from "path";
import cmd from "./cmd.js";

function cloneRepo() {
	const repo = cmd.str("gh repo list --json name | jq .[].name | fzf").replace(/\"/g, "");

	if (repo) cmd.run(`git clone "https://github.com/BRISINGR-01/${repo}"`);
}

function swtitchUI() {
	const path = "/home/alex/dotfiles/nix/UI/default.nix";
	const file = cmd.read(path);

	const newUI = file.includes("hyprland") ? "gnome" : "hyprland";
	const oldUI = !file.includes("hyprland") ? "gnome" : "hyprland";

	cmd.print(`Switching to ${newUI}`, { bold: true, color: "cyan" }).writeTo(path, file.replace(oldUI, newUI));

	cmd.run(`sudo nixos-rebuild boot; sudo reboot now`);
}

function updateTimezone() {
	const zone = cmd.str("tzupdate -p");
	const timezoneFile = "/home/alex/dotfiles/nix/system/timezone.nix";

	const fileContent = cmd.read(timezoneFile);
	if (!fileContent.includes(zone)) {
		cmd
			.writeTo(timezoneFile, fileContent.replace(/.*time.timeZone.*/, `time\.timeZone = \"${zone}\";`))
			.run(`sudo nixos-rebuild switch`);
	}
}

function pathCopy() {
	const arg = cmd.params.slice(1).join(" ").trim();

	if (!arg) cmd.error("Usage: path-copy <path>").exit(1);

	const p = path.resolve(cmd.currentDir, arg);

	if (!fs.existsSync(p)) cmd.error(`"${p}" does not exist`).exit(1);

	copy(cmd.str(`realpath "${p}"`));
}

function addScript() {
	const name = cmd.params[1];
	if (!name) cmd.error("Usage: add-script <name>").exit(1);

	cmd.run(`
    echo "#!/bin/node" >~/dotfiles/scripts/${name}
    chmod +x ~/dotfiles/scripts/${name}
  `);
}

const choices = {
	"clone-repo": cloneRepo,
	"switch-ui": swtitchUI,
	"update-timezone": updateTimezone,
	"add-script": addScript,
	"path-copy": pathCopy,
};

const arg = cmd.parameter || cmd.fzf(Object.keys(choices));

if (!arg) cmd.error("No choice selected").exit();
if (!choices[arg]) cmd.error(`Unknown choice: ${arg}`).exit();

choices[arg]();
